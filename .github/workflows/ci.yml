# This file was automatically generated by sbt-github-actions using the
# githubWorkflowGenerate task. You should add and commit this file to
# your git repository. It goes without saying that you shouldn't edit
# this file by hand! Instead, if you wish to make changes, you should
# change your sbt build configuration to revise the workflow description
# to meet your needs, then regenerate this file.

name: Continuous Integration

on:
  pull_request:
    branches: ['**', '!update/**', '!pr/**']
  push:
    branches: ['**', '!update/**', '!pr/**']
    tags: [v*]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    name: Build and Test
    strategy:
      matrix:
        os: [macos-14]
        scala: [3.3.1]
        java: [temurin@17]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java (temurin@17)
        if: matrix.java == 'temurin@17'
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: sbt

      - name: Install sbt, s2n, utf8proc (MacOS)
        if: startsWith(matrix.os, 'macos')
        run: brew install sbt llvm@17 s2n utf8proc

      - name: Install s2n, utf8proc (Ubuntu)
        if: startsWith(matrix.os, 'ubuntu')
        run: sudo apt-get update && sudo apt-get install clang && /home/linuxbrew/.linuxbrew/bin/brew install s2n utf8proc

      - if: startsWith(matrix.os, 'macos')
        run: |
          if [ $(arch) == "arm64" ]; then
            echo "LLVM_BIN=/opt/homebrew/opt/llvm@17/bin" >> $GITHUB_ENV
          else
            echo "LLVM_BIN=/usr/local/opt/llvm@17/bin" >> $GITHUB_ENV
          fi

      - name: Check that workflows are up to date
        run: sbt '++ ${{ matrix.scala }}' githubWorkflowCheck

      - name: Build project
        run: sbt '++ ${{ matrix.scala }}' test

      - run: sbt '++ ${{ matrix.scala }}' 'show cliNative/nativeConfig'

      - name: Generate macos-14 native binary
        if: matrix.os == 'macos-14'
        env:
          SCALANATIVE_MODE: release-full
        run: sbt '++ ${{ matrix.scala }}' 'generateNativeBinary ./clickup-cli-macos-aarch64'

      - name: Compress target directories
        run: tar cf targets.tar target modules/cli/.jvm/target modules/cli/.native/target project/target

      - name: Upload target directories
        uses: actions/upload-artifact@v4
        with:
          name: target-${{ matrix.os }}-${{ matrix.scala }}-${{ matrix.java }}
          path: targets.tar

  publish:
    name: Publish Artifacts
    needs: [build]
    if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v'))
    strategy:
      matrix:
        os: [macos-14]
        scala: [3.3.1]
        java: [temurin@17]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java (temurin@17)
        if: matrix.java == 'temurin@17'
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: sbt

      - name: Download target directories (3.3.1)
        uses: actions/download-artifact@v4
        with:
          name: target-${{ matrix.os }}-3.3.1-${{ matrix.java }}

      - name: Inflate target directories (3.3.1)
        run: |
          tar xf targets.tar
          rm targets.tar
